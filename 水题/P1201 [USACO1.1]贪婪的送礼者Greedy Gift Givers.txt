普及-

题目描述
对于一群（NP个）要互送礼物的朋友，GY要确定每个人送出的钱比收到的多多少。在这一个问题中，每个人都准备了一些钱来送礼物，而这些钱将会被平均分给那些将收到他的礼物的人。然而，在任何一群朋友中，有些人将送出较多的礼物(可能是因为有较多的朋友)，有些人有准备了较多的钱。给出一群朋友，没有人的名字会长于 14 字符，给出每个人将花在送礼上的钱，和将收到他的礼物的人的列表，请确定每个人收到的比送出的钱多的数目。

输入格式
第 1 行: 人数NP,2<= NP<=10

第 2 行 到 第NP+1 行:这NP个在组里人的名字一个名字一行

第NP＋2到最后：

这里的I段内容是这样组织的：

第一行是将会送出礼物人的名字。

第二行包含二个数字:第一个是原有的钱的数目（在0到2000的范围里），第二个 NGi 是将收到这个人礼物的人的个数 如果 NGi 是非零的, 在下面 NGi 行列出礼物的接受者的名字，一个名字一行。

输出格式
输出共 NP NP 行，每行输出一个人的名字和该人收到的钱比送出的钱多的数目。名字的顺序应该与输入第 2 2 行至 NP+1 NP+1 行的顺序相同。

送出的钱永远是整数，即假设送礼人一次向 m m 人送出 n n 元，每个人应该得到 \lfloor n/m \rfloor ?n/m? 元。剩余未送出的钱应返还给送礼者。

输入输出样例
输入 #1 复制
5
dave
laura
owen
vick
amr
dave
200 3
laura
owen
vick
owen
500 1
dave
amr
150 2
vick
owen
laura
0 2
amr
vick
vick
0 0
输出 #1 复制
dave 302
laura 66
owen -359
vick 141
amr -150
说明/提示
题目翻译来自NOCOW。

USACO Training Section 1.1

思路：用哈希表存姓名，下表递增，通知设立一个数组用来保存每个人的钱数，初始化0
然后分钱的时候就去哈希表找名字
找到名字后对应下标数组值加上钱数，分完后计算余下钱数，给分钱人对应哈希表下标的数组值加上即可
注意输入输出格式（洛谷每题第一WA，格式不对。。。）

上代码：
#include<iostream>
#pragma warning(disable:4996)
#include<cstring>
#include<cstdio>
#include<algorithm>
#include <vector>
#include <queue>
#include <map>
typedef long long ll;
using namespace std;
int main() {
	vector<string> curr;
	int res[100];
	memset(res, 0, sizeof(res));
	int num;
	cin >> num;
	map<string, int> map;
	for (int i = 0; i < num; i++) {
		string name;
		cin >> name;
		map[name] = i;
		curr.push_back(name);
	}
	for (int i = 0; i < num; i++) {
		int money, friendnum;
		int yu = 0;
		string givename;
		cin >> givename;
		cin >> money >> friendnum;
		for (int j = 0; j < friendnum; j++) {
			string fname;
			cin >> fname;
			res[map[fname]] += money / friendnum;
			yu += money / friendnum;
		}
		res[map[givename]] -= money;
		res[map[givename]] += money - yu;
	}
	for (int i = 0; i < num; i++) {
		cout << curr[i];
		printf(" ");
		cout<< res[map[curr[i]]];
		printf("\n");
	}
}