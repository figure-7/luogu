普及-

石头剪刀布是常见的猜拳游戏:石头胜剪刀,剪刀胜布,布胜石头。如果两个人出拳一 样，则不分胜负。在《生活大爆炸》第二季第8集中出现了一种石头剪刀布的升级版游戏。

升级版游戏在传统的石头剪刀布游戏的基础上,增加了两个新手势:

斯波克:《星际迷航》主角之一。

蜥蜴人:《星际迷航》中的反面角色。

这五种手势的胜负关系如表一所示,表中列出的是甲对乙的游戏结果。



现在,小 A和小 B尝试玩这种升级版的猜拳游戏。已知他们的出拳都是有周期性规律的，但周期长度不一定相等。例如：如果小A以“石头-布-石头-剪刀-蜥蜴人-斯波克”长度为 66 的周期出拳,那么他的出拳序列就是“石头-布-石头-剪刀-蜥蜴人-斯波克-石头-布-石头-剪刀-蜥蜴人-斯波克-......”,而如果小B以“剪刀-石头-布-斯波克-蜥蜴人”长度为 55 的周期出拳,那么他出拳的序列就是“剪刀-石头-布-斯波克-蜥蜴人-剪刀-石头-布-斯波克-蜥蜴人-......”

已知小 A和小 B 一共进行 NN 次猜拳。每一次赢的人得 11 分，输的得 00 分；平局两人都得 00 分。现请你统计 NN 次猜拳结束之后两人的得分。

输入格式
第一行包含三个整数：N,N_A,N_BN,N 
A
?	 ,N 
B
?	 ,分别表示共进行 NN 次猜拳、小 A出拳的周期长度，小 B 出拳的周期长度。数与数之间以一个空格分隔。

第二行包含 N_AN 
A
?	  个整数,表示小 A出拳的规律,第三行包含 N_BN 
B
?	  个整数,表示小 B 出拳的规律。其中，00 表示“剪刀”，11 表示“石头”，22 表示“布”，33 表示“蜥蜴人”，4 4表示“斯波克”。数与数之间以一个空格分隔。

输出格式
输出一行，包含两个整数，以一个空格分隔，分别表示小 A、小 B的得分。

输入输出样例
输入 #1 复制
10 5 6
0 1 2 3 4
0 3 4 2 1 0
输出 #1 复制
6 2
输入 #2 复制
9 5 5
0 1 2 3 4
1 0 3 2 4
输出 #2 复制
4 4
说明/提示
对于100\%100%的数据，0 < N \leq 200, 0 < N_A \leq 200, 0 < N_B \leq 2000<N≤200,0<N 
A
?	 ≤200,0<N 
B
?	 ≤200 。

思路：可以利用打表的方法，把对应猜拳数字作为二维数组的下标，值对应成绩操作方式
注意一下越界就行了

上代码：
#include<iostream>
#pragma warning(disable:4996)
#include<cstring>
#include<cstdio>
#include<algorithm>
#include <vector>
#include <queue>
#include <map>
typedef long long ll;
using namespace std;
using pii = pair<int, int>;
int main() {
	int res[5][5] = {{0,-1,1,1,-1},{1,0,-1,1,-1},{-1,1,0,-1,1}, {-1,-1,1,0,1},{1,1,-1,-1,0} };
	vector<int> aa;
	vector<int> bb;
	int n, na, nb, a, b;
	int ia = 0;
	int ib = 0;
	int resa = 0;
	int resb = 0;
	cin >> n >> na >> nb;
	for (int i = 0; i < na; i++) {
		cin >> a;
		aa.push_back(a);
	}
	for (int i = 0; i < nb; i++) {
		cin >> b;
		bb.push_back(b);
	}
	for (int i = 0; i < n; i++) {
		if (ia == aa.size())
			ia = 0;
		if (ib == bb.size())
			ib = 0;
		if (res[aa[ia]][bb[ib]] == 1)
			resa++;
		if (res[aa[ia]][bb[ib]] == -1)
			resb++;
		ia++;
		ib++;
	}
	printf("%d %d", resa, resb);
}